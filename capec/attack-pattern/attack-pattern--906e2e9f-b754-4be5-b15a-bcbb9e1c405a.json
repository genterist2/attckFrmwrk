{
    "type": "bundle",
    "id": "bundle--e8e67648-1067-446b-946e-a8c292c010d2",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--906e2e9f-b754-4be5-b15a-bcbb9e1c405a",
            "created_by_ref": "identity--31f421d4-bb36-4dbf-9dfc-c116a91de14b",
            "created": "2018-07-31T00:00:00.000Z",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Inclusion of Code in Existing Process",
            "description": "The adversary takes advantage of a bug in an application failing to verify the integrity of the running process to execute arbitrary code in the address space of a separate live process. The adversary could use running code in the context of another process to try to access process's memory, system/network resources, etc. The goal of this attack is to evade detection defenses and escalate privileges by masking the malicious code under an existing legitimate process. Examples of approaches include but not limited to: dynamic-link library (DLL) injection, portable executable injection, thread execution hijacking, ptrace system calls, VDSO hijacking, and more.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/640.html",
                    "external_id": "CAPEC-640"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/706.html",
                    "external_id": "CWE-706"
                }
            ],
            "object_marking_refs": [
                "marking-definition--b345b2a9-b539-4d88-8a9a-1ebcc9f77507"
            ],
            "x_capec_abstraction": "Detailed",
            "x_capec_consequences": {
                "Integrity": [
                    "Execute Unauthorized Commands",
                    "Read Data"
                ],
                "Confidentiality": [
                    "Execute Unauthorized Commands",
                    "Read Data"
                ]
            },
            "x_capec_likelihood_of_attack": "Low",
            "x_capec_prerequisites": [
                "The targeted application fails to verify the integrity of the running process that allows an adversary to execute arbitrary code."
            ],
            "x_capec_skills_required": {
                "High": "Knowledge of how to load malicious code into the memory space of a running process, as well as the ability to have the running process execute this code. For example, with DLL injection, the adversary must know how to load a DLL into the memory space of another running process, and cause this process to execute the code inside of the DLL."
            },
            "x_capec_status": "Stable",
            "x_capec_typical_severity": "High"
        }
    ]
}