{
    "type": "bundle",
    "id": "bundle--789a2349-8b8a-4439-a120-0e6eb188d67c",
    "spec_version": "2.0",
    "objects": [
        {
            "type": "attack-pattern",
            "id": "attack-pattern--41b0fae1-f8fb-42ba-be62-2a774d12adda",
            "created_by_ref": "identity--31f421d4-bb36-4dbf-9dfc-c116a91de14b",
            "created": "2014-06-23T00:00:00.000Z",
            "modified": "2018-07-31T00:00:00.000Z",
            "name": "Format String Injection",
            "description": "An adversary includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An adversary can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the adversary can write to the program stack.",
            "external_references": [
                {
                    "source_name": "capec",
                    "url": "https://capec.mitre.org/data/definitions/135.html",
                    "external_id": "CAPEC-135"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/134.html",
                    "external_id": "CWE-134"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/20.html",
                    "external_id": "CWE-20"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/74.html",
                    "external_id": "CWE-74"
                },
                {
                    "source_name": "cwe",
                    "url": "http://cwe.mitre.org/data/definitions/133.html",
                    "external_id": "CWE-133"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Hal Burch, Brendan Saulsbury, FIO30-C. Exclude user input from format strings, 2011--05, CERT",
                    "url": "https://www.securecoding.cert.org/confluence/display/seccode/FIO30-C.+Exclude+user+input+from+format+strings",
                    "external_id": "REF-14"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Robert Auger, WASC Threat Classification 2.0, The Web Application Security Consortium (WASC)",
                    "url": "http://projects.webappsec.org/Format-String",
                    "external_id": "REF-15"
                },
                {
                    "source_name": "reference_from_CAPEC",
                    "description": "Fortify, The OWASP Application Security Desk Reference, 2010, The Open Web Application Security Project (OWASP)",
                    "url": "https://www.owasp.org/index.php/Format_String",
                    "external_id": "REF-16"
                }
            ],
            "object_marking_refs": [
                "marking-definition--b345b2a9-b539-4d88-8a9a-1ebcc9f77507"
            ],
            "x_capec_abstraction": "Standard",
            "x_capec_consequences": {
                "Integrity": [
                    "Modify Data",
                    "Modify Data",
                    "Modify Data",
                    "Execute Unauthorized Commands (Run Arbitrary Code)"
                ],
                "Access_Control": [
                    "Bypass Protection Mechanism"
                ],
                "Confidentiality": [
                    "Read Data",
                    "Read Data",
                    "Read Data"
                ]
            },
            "x_capec_example_instances": [
                "Untrusted search path vulnerability in the add_filename_to_string function in intl/gettext/loadmsgcat.c for Elinks 0.11.1 allows local users to cause Elinks to use an untrusted gettext message catalog (.po file) in a \"../po\" directory, which can be leveraged to conduct format string attacks. See also: CVE-2007-2027"
            ],
            "x_capec_likelihood_of_attack": "High",
            "x_capec_prerequisites": [
                "The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters."
            ],
            "x_capec_resources_required": [
                "None: No specialized resources are required to execute this type of attack."
            ],
            "x_capec_skills_required": {
                "High": "In order to discover format string vulnerabilities it takes only low skill, however, converting this discovery into a working exploit requires advanced knowledge on the part of the adversary."
            },
            "x_capec_status": "Draft",
            "x_capec_typical_severity": "High"
        }
    ]
}